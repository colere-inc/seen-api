// Code generated by MockGen. DO NOT EDIT.
// Source: app/domain/repository/chatbot.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	model "github.com/colere-inc/seen-api/app/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockChatbotRepository is a mock of ChatbotRepository interface.
type MockChatbotRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChatbotRepositoryMockRecorder
}

// MockChatbotRepositoryMockRecorder is the mock recorder for MockChatbotRepository.
type MockChatbotRepositoryMockRecorder struct {
	mock *MockChatbotRepository
}

// NewMockChatbotRepository creates a new mock instance.
func NewMockChatbotRepository(ctrl *gomock.Controller) *MockChatbotRepository {
	mock := &MockChatbotRepository{ctrl: ctrl}
	mock.recorder = &MockChatbotRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChatbotRepository) EXPECT() *MockChatbotRepositoryMockRecorder {
	return m.recorder
}

// GetChatbotAnswers mocks base method.
func (m *MockChatbotRepository) GetChatbotAnswers(spaceID, surveyID string) (*model.ChatbotAnswers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChatbotAnswers", spaceID, surveyID)
	ret0, _ := ret[0].(*model.ChatbotAnswers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChatbotAnswers indicates an expected call of GetChatbotAnswers.
func (mr *MockChatbotRepositoryMockRecorder) GetChatbotAnswers(spaceID, surveyID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChatbotAnswers", reflect.TypeOf((*MockChatbotRepository)(nil).GetChatbotAnswers), spaceID, surveyID)
}
